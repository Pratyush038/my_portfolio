@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(0.98 0 0); /* Light background */
  --foreground: oklch(0.05 0 0); /* Dark text for light mode */
  --card: oklch(1 0 0); /* White cards for light mode */
  --card-foreground: oklch(0.05 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.05 0 0);
  --primary: oklch(0.55 0.22 25); /* Red color */
  --primary-foreground: oklch(0.98 0 0);
  --secondary: oklch(0.95 0 0); /* Light gray secondary */
  --secondary-foreground: oklch(0.05 0 0);
  --muted: oklch(0.96 0 0); /* Light muted */
  --muted-foreground: oklch(0.4 0 0);
  --accent: oklch(0.55 0.22 25); /* Red accent */
  --accent-foreground: oklch(0.98 0 0);
  --destructive: oklch(0.593 0.22 25); /* Red for destructive actions */
  --border: oklch(0.9 0 0); /* Light border */
  --input: oklch(0.95 0 0); /* Light input background */
  --ring: oklch(0.55 0.22 25); /* Red focus ring */
  --chart-1: oklch(0.55 0.22 25);
  --chart-2: oklch(0.6 0.15 45);
  --chart-3: oklch(0.65 0.18 65);
  --chart-4: oklch(0.7 0.2 85);
  --chart-5: oklch(0.75 0.22 105);
}

.dark {
  --background: oklch(0.05 0 0); /* Very dark black */
  --foreground: oklch(0.95 0 0); /* Light text */
  --card: oklch(0.08 0 0); /* Slightly lighter dark for cards */
  --card-foreground: oklch(0.95 0 0);
  --popover: oklch(0.08 0 0);
  --popover-foreground: oklch(0.95 0 0);
  --primary: oklch(0.65 0.25 25); /* Brighter red for dark mode */
  --primary-foreground: oklch(0.05 0 0);
  --secondary: oklch(0.15 0 0); /* Dark gray secondary */
  --secondary-foreground: oklch(0.95 0 0);
  --muted: oklch(0.12 0 0); /* Muted dark */
  --muted-foreground: oklch(0.7 0 0);
  --accent: oklch(0.65 0.25 25); /* Brighter red accent */
  --accent-foreground: oklch(0.05 0 0);
  --destructive: oklch(0.65 0.25 25);
  --border: oklch(0.2 0 0); /* Dark border */
  --input: oklch(0.15 0 0); /* Dark input background */
  --ring: oklch(0.65 0.25 25); /* Brighter red ring */
}

@layer base {
  * {
    border-color: oklch(var(--border));
  }
  body {
    background-color: oklch(var(--background));
    color: oklch(var(--foreground));
  }
}

/* Smooth scrolling for anchor links */
html {
  scroll-behavior: smooth;
}

/* Scroll margin for sections to account for fixed header */
section {
  scroll-margin-top: 4rem;
}

/* Scrolling Tech Stack Animations */
@keyframes scroll-left {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

@keyframes scroll-right {
  0% {
    transform: translateX(-50%);
  }
  100% {
    transform: translateX(0);
  }
}

.animate-scroll-left {
  animation: scroll-left 30s linear infinite;
}

/* Animated gradient border animations */
@keyframes gradient-border {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes gradient-border-reverse {
  0% {
    background-position: 100% 50%;
  }
  50% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

.animate-gradient-border {
  position: relative;
  background: linear-gradient(90deg,
    oklch(from var(--primary) calc(l + 0.1) c h),
    oklch(from var(--primary) calc(l + 0.05) c h),
    oklch(from var(--primary) calc(l + 0.1) c h)
  );
  background-size: 200% 100%;
  animation: gradient-border 3s ease-in-out infinite;
  border-radius: inherit;
}

.animate-gradient-border::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(90deg,
    oklch(from var(--primary) calc(l + 0.1) c h),
    oklch(from var(--primary) calc(l + 0.05) c h),
    oklch(from var(--primary) calc(l + 0.1) c h)
  );
  background-size: 200% 100%;
  animation: gradient-border-reverse 3s ease-in-out infinite;
  border-radius: inherit;
  z-index: -1;
  filter: blur(8px);
  opacity: 0.7;
}

.animate-gradient-border-subtle {
  position: relative;
  background: linear-gradient(90deg,
    oklch(from var(--primary) calc(l + 0.08) c h / 0.3),
    oklch(from var(--primary) calc(l + 0.04) c h / 0.2),
    oklch(from var(--primary) calc(l + 0.08) c h / 0.3)
  );
  background-size: 200% 100%;
  animation: gradient-border 4s ease-in-out infinite;
  border-radius: inherit;
}

.animate-gradient-border-subtle::before {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(90deg,
    oklch(from var(--primary) calc(l + 0.08) c h / 0.2),
    oklch(from var(--primary) calc(l + 0.04) c h / 0.1),
    oklch(from var(--primary) calc(l + 0.08) c h / 0.2)
  );
  background-size: 200% 100%;
  animation: gradient-border-reverse 4s ease-in-out infinite;
  border-radius: inherit;
  z-index: -1;
  filter: blur(6px);
  opacity: 0.5;
}
